<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hud_ls2_selector</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Level Select Cursor

//Loop 'Level Select' bgm
audio_play_sound(bgm_levelselect, 1, true);

//Cursor position
xpos = 0;
ypos = 0;

//Is the level selected?
ready = 0;

//Scrolling text
if (obj_persistent.gameclear == 0)
    str = "                     Arrows: Move, Shift: Select, Space: Swap between Mario / Luigi, Control: Go Back";
else
    str = "                     Arrows: Move, Shift: Select, Space: Swap between Mario / Luigi, Control: Go Back, H: Enable / Disable Hard Mode";

//String length
len = string_length(str);

//Scroll
scroll = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage cursor position and choice

//Update cursor position
x = 16+(41*xpos)-xpos;
y = 12+(25*ypos)-ypos;

//If the level has not been chosen
if (ready == 0) 
&amp;&amp; (obj_player_ls.ready == 0) {

    //Move to the left
    if (keyboard_check_pressed(vk_left)) {
    
        //Play 'Fireball' sound
        audio_play_sound(snd_fireball, 0, false);    
    
        //Update position
        xpos--;
        if (xpos &lt; 0)
            xpos = 3;
    }
    
    //Move to the right
    else if (keyboard_check_pressed(vk_right)) {
    
        //Play 'Fireball' sound
        audio_play_sound(snd_fireball, 0, false);    
    
        //Update position
        xpos++;
        if (xpos &gt; 3)
            xpos = 0;
    }
    //Move up
    else if (keyboard_check_pressed(vk_up)) {
    
        //Play 'Fireball' sound
        audio_play_sound(snd_fireball, 0, false);    
    
        //Update position    
        ypos--;
        if (ypos &lt; 0)
            ypos = 7;
    }
    
    //Move down
    else if (keyboard_check_pressed(vk_down)) {
    
        //Play 'Fireball' sound
        audio_play_sound(snd_fireball, 0, false);    
    
        //Update position
        ypos++;
        if (ypos &gt; 7)
            ypos = 0;
    }
    
    //Select current box
    else if (keyboard_check_pressed(vk_shift)) {
    
        //Check for a box
        var mybox = collision_point(x + 16, y + 8, obj_levelbox, 0, 0);
        
        //If said box exists
        if (mybox)
            with (mybox) event_user(0);
    }
    
    //Enable / Disable Hard Mode
    else if (keyboard_check_pressed(ord('H')))
    &amp;&amp; (obj_persistent.gameclear == 1)
        global.hardmode = !global.hardmode;
    
    //Go back to level select screen
    else if (keyboard_check_pressed(vk_control))
        room_goto(rm_title);
}

//Scroll text
scroll -= 1;
if (scroll &lt; -(len*8))
    scroll = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop 'Level Select' bgm

audio_stop_sound(bgm_levelselect);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset variables

//Reset the powerup
global.powerup = cs_small;

//Select Mario back
global.player = 0;

//Coins
global.coins = 0;

//Time
global.time = 0;

//Score
score = 0;

//Lives
lives = 5;



//Disable 'Go to level select' method
global.ls = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw cursor and scrolling text

//Draw cursor
draw_sprite(spr_hud_ls2_selector, -1, round(x), round(y));

//Draw 'Level select'
draw_sprite(spr_hud_ls2_levelselect, -1, view_xview[view_current] + 189, view_yview[view_current] + 12);

//Set colour for rectangle
draw_set_colour(make_colour_rgb(32, 32, 32));
draw_rectangle(16, 201, 191, 216, false);

//Draw scrolling text
draw_set_colour(c_white);
draw_string_port(str, 20, 205, 168, 8, scroll);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
