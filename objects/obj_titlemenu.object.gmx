<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_hud</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Title Menu

//Inherit event
event_inherited();

//Play 'Title Screen' bgm
audio_loop_sound(global._music[0], global._st[0], global._en[0], 48000, 1);

//First level
mylevel = "1-1";

//Page
page = 0;

//Choice
current = 1;

//If the game has been cleared
if (obj_persistent.gameclear == true) {
    
    //Menu 0: Main
    menu[0,0] = 3;
    menu[0,1] = " NEW GAME";
    menu[0,2] = " CONTINUE";
    menu[0,3] = " LEVEL SELECT";
    
    //Menu 1: New Game
    menu[1,0] = 2;
    menu[1,1] = " MARIO GAME";
    menu[1,2] = " LUIGI GAME";
    
    //Menu 2: Difficulty
    menu[2,0] = 2;
    menu[2,1] = " EASY";
    menu[2,2] = " HARD";
}

//Otherwise, set default menu
else {
    
    //Menu 0: Main
    menu[0,0] = 3;
    menu[0,1] = " NEW GAME";
    menu[0,2] = " CONTINUE";
    menu[0,3] = " LEVEL SELECT";
    
    //Menu 1: New Game
    menu[1,0] = 2;
    menu[1,1] = " MARIO GAME";
    menu[1,2] = " LUIGI GAME";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage menu actions

//Inherit event
event_inherited();

//If the player presses the 'Up' key
if (keyboard_check_pressed(vk_up)) {

    //Play 'Fireball' sound
    audio_play_sound(snd_fireball, 0, false);

    //Cycle between options
    if (current == 1)
        current = menu[page,0];
    else
        current--;
}

//Otherwise, if the player presses the 'Down' key
else if (keyboard_check_pressed(vk_down)) {

    //Play 'Fireball' sound
    audio_play_sound(snd_fireball, 0, false);

    //Cycle between options        
    if (current == menu[page,0])
        current = 1;
    else
        current++;
}

//Otherwise, if the player presses the 'Shift' buttom
else if (keyboard_check_pressed(vk_shift)) {

    //If the game has been cleared
    if (obj_persistent.gameclear == 1) {

        //Page 0: Main
        if (page == 0) {
        
            //Option 1: NEW GAME
            if (current == 1) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);
                
                //Go to page 1
                page = 1;
                
                //Reset option to 1
                current = 1;
            }
            
            //Otherwise, load current game
            else if (current == 2) {
            
                //If a save file exists
                if (file_exists("SMBESave.sav")) {
                
                    //Play 'Correct' sound
                    audio_play_sound(snd_correct, 0, false);
                    
                    //Load game
                    load("SMBESave.sav");
                    
                    //Go to level start screen
                    room_goto(rm_levelstart);
                }
                
                //Otherwise, play 'Wrong' sound
                else
                    audio_play_sound(snd_wrong, 0, false);   
            }
            
            //Otherwise, go to level selection screen
            else if (current == 3) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);        
                
                //Go to level selection screen
                room_goto(rm_levelselect);
            }
        }
        
        //Page 1: Player Select
        else if (page == 1) {
        
            //Option 1: MARIO GAME
            if (current == 1) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);
                
                //Go to page 1
                global.player = 0;
                
                //Go to page 1
                page = 2;
                
                //Reset option to 1
                current = 1;
            }
            
            //Option 2: LUIGI GAME
            else if (current == 2) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);
                
                //Load game
                global.player = 1;
                
                //Go to page 1
                page = 2;
                
                //Reset option to 1
                current = 1;       
            }        
        }
        
        //Page 2: Choose Difficulty
        else if (page == 2) {
        
            //Option 1: EASY MODE
            if (current == 1) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);
                
                //Set the world
                global.world = mylevel;
                
                //Go to page 1
                global.hardmode = 0;
                            
                //Go to level start screen
                room_goto(rm_levelstart);    
            }
            
            //Option 2: HARD MODE
            else if (current == 2) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);
                
                //Set the world
                global.world = mylevel;
                
                //Load game
                global.hardmode = 1;
                
                //Go to level start screen
                room_goto(rm_levelstart);           
            }              
        }
    }
    
    //Otherwise
    else {
    
        //Page 0: Main
        if (page == 0) {
        
            //Option 1: NEW GAME
            if (current == 1) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);
                
                //Go to page 1
                page = 1;
                
                //Reset option to 1
                current = 1;
            }
            
            //Otherwise, load current game
            else if (current == 2) {
            
                //If a save file exists
                if (file_exists("SMBESave.sav")) {
                
                    //Play 'Correct' sound
                    audio_play_sound(snd_correct, 0, false);
                    
                    //Load game
                    load("SMBESave.sav");
                    
                    //Go to level start screen
                    room_goto(rm_levelstart);
                }
                
                //Otherwise, play 'Wrong' sound
                else
                    audio_play_sound(snd_wrong, 0, false);   
            }
            
            //Otherwise, go to level selection screen
            else if (current == 3) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);        
                
                //Go to level selection screen
                room_goto(rm_levelselect);
            }
        }
        
        //Page 1: Player Select
        else if (page == 1) {
        
            //Option 1: MARIO GAME
            if (current == 1) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);
                
                //Go to page 1
                global.player = 0;
                
                //Set the world
                global.world = mylevel;
                            
                //Go to level start screen
                room_goto(rm_levelstart);   
            }
            
            //Option 2: LUIGI GAME
            else if (current == 2) {
            
                //Play 'Correct' sound
                audio_play_sound(snd_correct, 0, false);
                
                //Load game
                global.player = 1;
                
                //Set the world
                global.world = mylevel;
                            
                //Go to level start screen
                room_goto(rm_levelstart);    
            }        
        }
    }
}

//Go back
else if (keyboard_check_pressed(vk_control)) {

    //Return to page
    if (page != 0) {
    
        page--;
        current = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop title music

audio_stop_sound(global._music[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the title menus

//Draw HUD
event_inherited();

//Set the font
draw_set_font(global.hud_font);

//Set the colour
draw_set_colour(c_white);

//Set the alpha
draw_set_alpha(1);

//Get the length of the menu
for (var i=1; i&lt;=menu[page,0]; i++) {
    
    //Draw the text...
    draw_text(view_xview[0]+80, view_yview[0]+144+(12*(i-1)),menu[page,i]);
    
    //...and draw a arrow next to the selected option 
    if (i == current)
        draw_sprite_ext(spr_hud_title_cursor, -1, view_xview[0]+72, view_yview[0]+144+(12*(i-1)), 1, 1, 0, c_white, 1);
}

//Draw highscore
draw_text(view_xview[0]+80, view_yview[0]+192, "TOP- " + string_add_zeros(obj_persistent.highscore, 6));

//Draw Mario &amp; Luigi
draw_sprite(scr_mario_walk(), 0, 40, 193);
draw_sprite_ext(scr_luigi_walk(), 0, 216, 193, -1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
