<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SMBEngine Persistent Object

//Initialize the palette swapping system
pal_swap_init_system(shd_palette_swapper, false);

//Initialize global variables
init_globals_mus();
init_globals();
init_pixel(1);

//How the screen is fading
//0: From black, 1: To black
mode = 0

//How much the screen is faded
done = 0

//Screenshot of the game, if it exists
back = -1

//Ports
port_x = 0;
port_y = 0;

//Game width
global.gw = 256;

//Game height
global.gh = 224;

//Message?
message = noone;

//Alternate keys
keyboard_set_map(ord('X'), vk_shift);
keyboard_set_map(ord('Z'), vk_control);

//Set the in-game fonts
global.hud_font = font_add_sprite(spr_hudfont,ord('!'), 0, 0);
global.hud_fontr = font_add_sprite(spr_hudfont_red,ord('!'), 0, 0);
global.hud_fontw = font_add_sprite(spr_hudfont_menus,ord('!'), 0, 0);

//Set the epsilon value for floating point numbers
math_set_epsilon(0.0001);

//Disable application surface automatic drawing
application_surface_draw_enable(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hide message

message = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deactivate everything

instance_deactivate_all(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop fading to black

//Set mode to fade from black
mode = 0;

//Begin fading from black
done = 0;

//Activate everything
instance_activate_all();

//Delete the screenshot
if (background_exists(back))
    background_delete(back);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delay applying settings

//Apply fullscreen
window_set_fullscreen(fullscreen);

//Apply filtering and VSync
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Center the window

window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prevent 1-UP farming

if (lives &gt; 127)
    lives = 127;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up room parameters

//Enable views if not enabled
view_enabled = true;

//Update visibility
view_visible[0] = true;

//Update wport
view_wport[0] = global.gw;

//Update hport
view_hport[0] = global.gh;

//Update wview
view_wview[0] = global.gw;

//Update hview
view_hview[0] = global.gh; 

//Update hborder
view_hborder[0] = global.gw/2;

//Update vborder
view_vborder[0] = global.gh/2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep following objects activated

instance_activate_object(obj_audio_loop_sound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle all of the hot keys

//Quit the game when ALT+F4 are pressed.
if (keyboard_check_pressed(vk_f4))
    game_end();
    
//Restart the game when ALT+R are pressed.
else if (keyboard_check_pressed(ord('R'))) {

    //Stop all audio
    audio_stop_all();
        
    //Reset all global variables
    init_globals();    
    
    //If the screen is not fading out
    room_goto(room_first);
    
    //Show message
    message = "GAME RESTART"
    alarm[4] = 40;
}

//Enable / Disable VSync
else if (keyboard_check_pressed(ord('V'))) {

    //Toggle vsync
    vsync = !vsync;
    
    //Apply settings
    event_user(0);

    //Show message
    if (vsync) {
    
        message = "VSYNC ON";
        alarm[4] = 40;
    }
    else {
    
        message = "VSYNC OFF";
        alarm[4] = 40;
    }
}

//Change window size
else if (keyboard_check_pressed(ord('W'))) {

    //If the window is not set to fullscreen
    if (fullscreen == false) {

        //Change filter
        filter++;
        
        //Check if the filter is the second one
        if (filter == 3) {
        
            //Set default filter
            filter = 0;
            
            //Set fullscreen variable
            fullscreen = true;
            
            //Set fullscreen mode
            window_set_fullscreen(true);                                                           
        }
    }
    
    //Otherwise, set it to windowed mode
    else {
    
        //Change fullscreen variable
        fullscreen = false;
    
        //Set windowed mode
        window_set_fullscreen(false);
    }
    
    //Apply settings
    event_user(0);
    
    //Hide message
    alarm[4] = 60;
    
    //Display message
    if (fullscreen)
        message = "FULLSCREEN MODE";
    else
        message = "WINDOW SIZE " + string(filter+1) + "x";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade the screen to black

//If this event was called manually
if (mode == 0) {

    //Take a screenshot
    back = background_create_from_surface(application_surface, 0, 0, view_wview[0], view_hview[0], 0, 0);
    
    //Pixel size
    size = 25.6;

    //Deactivate everything
    instance_deactivate_all(1);
}

//Start fading
done = 0;

//To black
mode = 1;

//Make sure it stops when its done
alarm[2] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up the screen to be displayed

//Temporary variable
var s;

//Normal
if (filter = 0)
    s = 1;

//x2
else if (filter = 1)
    s = 2;

//x3
else if (filter = 2)
    s = 3;

//Reset display
display_reset(display_aa,vsync);

//Set up the window
window_set_size(global.gw*s,global.gh*s);

//Set up the display
display_set_gui_size(global.gw*s,global.gh*s);

//Center the window
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare to fade to black

//Fade to black
mode = 1;

//Set the pixel size
size = 0;

//Take a screenshot
back = background_create_from_surface(application_surface, 0, 0, view_wview[0], view_hview[0], 0, 0);

//Set alarm to execute when the next room starts
alarm[3] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade the screen to black, unless you just opened up the game

if (mode = 1)
    event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save fullscreen, window size, vertical syncronization, highscore and unlocked levels. 

keyboard_key_release(vk_control);

//Open the file
var file = file_text_open_write("settings.dat");

//Save fullscreen settings
file_text_write_string(file,string(fullscreen));
file_text_writeln(file);

//Save filtering settings
file_text_write_string(file,string(filter));
file_text_writeln(file);

//Save vsync settings
file_text_write_string(file,string(vsync));
file_text_writeln(file);

//Save highscore
file_text_write_string(file,string(highscore));
file_text_writeln(file);

//Save unlocked levels
for (var i=0; i&lt;32; i++) {

    file_text_write_string(file,string(unlock[i]));
    file_text_writeln(file);
}

//Save game clear
file_text_write_string(file,string(gameclear))

//Close the file
file_text_close(file);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load fullscreen, window size, vertical syncronization, highscore and unlocked levels. 

//If the 'settings.dat' file exist.
if (file_exists("settings.dat")) {

    //Open the file
    var file = file_text_open_read("settings.dat");

    //Set fullscreen mode based on the read value
    fullscreen = real(file_text_read_string(file));
    file_text_readln(file);

    //Set filtering mode based on the read value
    filter = real(file_text_read_string(file));
    file_text_readln(file);

    //Set vsync based on the read value
    vsync = real(file_text_read_string(file));
    file_text_readln(file);
    
    //Set highscore
    highscore = real(file_text_read_string(file));
    file_text_readln(file);
    
    //Set unlocked levels
    for (var i=0; i&lt;32; i++) {
    
        unlock[i] = real(file_text_read_string(file))
        file_text_readln(file);
    }
    
    //Game cleared
    gameclear = real(file_text_read_string(file));

    //Close the file
    file_text_close(file);
}
else {

    //Fullscreen is off by default
    fullscreen = 0;

    //Set the window to double of it's original size
    filter = 2;

    //VSync is off by default
    vsync = 0;
    
    //High score
    highscore = 0;
    
    //Unlocked levels
    for (var i=0; i&lt;32; i++) {
    
        unlock[i] = 0;
    }
    
    //Game cleared
    gameclear = 0;
}

//Apply loaded settings
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deals with the application surface, window size.

//Disable alpha blending
draw_enable_alphablend(false);

//Set the pixelate shader
if (done &lt; 1) {

    shader_set(shd_pixel);
    shader_set_uniform_f(pixel, global.gw, global.gh, size, size);
}

//Draw a rectangle
draw_rectangle_colour(0, 0, global.gw*(filter+1), global.gh*(filter+1), c_black, c_black, c_black, c_black, 0);

//Draw the application surface
draw_surface_stretched(application_surface, port_x*(filter+1), port_y*(filter+1), global.gw*(filter+1), global.gh*(filter+1));

//Reset the shader
shader_reset();

//Enable alpha blending
draw_enable_alphablend(true);

//Fades the screen to and from black
if (done &lt; 1) {

    done += 1/15;
    
    //Fade from black
    if (mode = 0) {
    
        draw_set_alpha(1-done);             
        size -= 2.56;
    }

    //Fade to black
    else {
    
        draw_set_alpha(done);
        size += 2.56;
    }

    //Draw the fade
    draw_set_color(c_black)
    draw_rectangle(0,0,5000,5000,0)
    draw_set_alpha(1)
    draw_set_color(c_white)
}

//Draw message at 2, 2
if (message != noone)
    draw_text(2,2,string(message));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display status message and fade effect

//Draws the screenshot shown when fading to black
if (background_exists(back)) {

    draw_enable_alphablend(0);
    draw_background(back,view_xview[0],view_yview[0]);
    draw_enable_alphablend(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Close the game

game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
